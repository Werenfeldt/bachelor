@inherits LayoutComponentBase
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage;
@inject NavigationManager NavManager;

<MudThemeProvider Theme="CustomTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Color="Color.Primary">
        @if (!loggedIn)
        {
            <MudSpacer />
        }
        else
        {
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start"
            OnClick="@((e) => DrawerToggle())"></MudIconButton>

            <MudNavMenu Rounded="true" Color="Color.Dark">
                <MudButton Href="/projects" Color="Color.Inherit">My Projects</MudButton>
            </MudNavMenu>

            <MudNavMenu Dense="true" Rounded="true" Margin="Margin.Dense" Color="Color.Dark">
                <MudButton Href="/createproject" Color="Color.Inherit">Add Project</MudButton>
            </MudNavMenu>

            <MudNavMenu Rounded="true" Color="Color.Dark">
                <MudButton Href="/download" Color="Color.Inherit">Download Documentation</MudButton>
            </MudNavMenu>

            <MudSpacer />
        }
        @if (!loggedIn)
        {
            <MudButton Href="/login" Color="Color.Inherit">Login</MudButton>
            <MudButton Href="/createuser" Color="Color.Inherit" Variant="Variant.Outlined">Sign Up</MudButton>
        }
        else
        {
            <MudButton Href="/" StartIcon="@Icons.Material.Filled.Logout" Edge="Edge.End" Color="Color.Inherit"
            OnClick="@(async () => await Logout())">
                Logout
            </MudButton>
        }

    </MudAppBar>
    @if (loggedIn & _drawerOpen)
    {
        <MudDrawer @bind-Open="@_drawerOpen" ClipMode="DrawerClipMode.Always">
            <NavMenu />
        </MudDrawer>
    }
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="mt-10">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = false;

    bool loggedIn = false;

    Guid userId { get; set; }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private async Task Logout()
    {
        await sessionStorage.ClearAsync();
        StateHasChanged();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        loggedIn = await sessionStorage.ContainKeyAsync("SessionUser");

        StateHasChanged();
    }

    MudTheme CustomTheme = new MudTheme()
        {
            Palette = new Palette()
            {
                Primary = "rgba(225, 150, 92, 1);",
                Secondary = "rgba(178, 144, 181, 1);",
            },
        };
}
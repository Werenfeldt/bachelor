@inject Blazored.SessionStorage.ISessionStorageService sessionStorage;
@inject IServiceManager serviceManager;
@inject NavigationManager NavManager;


<MudNavMenu Bordered="true" Color="Color.Primary" Rounded="true" Margin="Margin.Dense">
    @if(IsLoading)
    {
        <MudGrid>
            <MudItem Class="d-flex align-center justify-center mud-width-full">
                <MudProgressCircular Color="Color.Primary" Indeterminate="true"/>
            </MudItem>
        </MudGrid>
    }
    else 
    {
        @foreach (var project in projects)
        {
            <MudNavGroup Title="@project.Title" > 
                    @foreach (var testfile in project.testfiles)
                    {
                        <MudNavLink Href="@("/editor/" + @testfile.Id.ToString())">@testfile.Name</MudNavLink>
                    }
            </MudNavGroup>   
        }
    }
</MudNavMenu>



@code
{
    List<ProjectWithTestFilesDTO>? projects { get; set; }

    bool IsLoading { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {

        var user = await sessionStorage.GetItemAsync<UserDTO>("SessionUser");
        
        projects = await serviceManager.ProjectService.LoadSideBar(user.Id);

        IsLoading = false;

        StateHasChanged();
    }
}

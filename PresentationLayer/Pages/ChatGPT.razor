@inject IServiceManager serviceManager;
@inject IConfiguration _config;
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage;

@page "/gpt"

<PageTitle>Chat GPT</PageTitle>
<div class="h1 mb-4 text-center"> Input your script or url</div>
<div class="form-group text-center">
  <input class="form-control my-4 text-center py-2 m-auto" style="max-width:600px;" type="text" @bind="@gitUrl"
    placeholder="Give gitUrl here" />
  <input class="form-control my-4 text-center py-2 m-auto" style="max-width:600px;" type="text" @bind="@authToken"
    placeholder="Give authToken here" />
  <button class="btn btn-success mb-4 px-2" style="max-width:200px;" onclick="@GetResponseFromGPT3">Translate</button>
</div>
<div class="d-flex justify-content-center text-center">
  <div style="min-width:600px; min-height:260px; max-width:700px;"
    class="mt-2container border border-1 rounded-2 p-3 text-center">@generatedText</div>
</div>
@if (@user != null)
{
  <MudCard>
  <MudCardContent>
    <MudText>SessionUser</MudText>
    <MudText Typo="Typo.body2">Id: @user.Id </MudText>
    <MudText Typo="Typo.body2">Name: @user.Name </MudText>
    <MudText Typo="Typo.body2">Email: @user.Email </MudText>
  </MudCardContent>
</MudCard>
}

@code {

  public string gitUrl { get; set; }
  public string authToken { get; set; }
  public string generatedText { get; set; } = "Answer will be displayed here.";

  private UserDTO? user { get; set; }

  private async Task GetResponseFromGPT3()
  {
    generatedText = "Translating...";

    //var hej = serviceManager.ProjectService.CreateProjectAsync(user.Id, gitUrl, authToken);

    //generatedText = hej.ToString();
    StateHasChanged();
  }

  protected override async Task OnAfterRenderAsync(bool firstRender)
  {
    user = await sessionStorage.GetItemAsync<UserDTO>("SessionUser");
    StateHasChanged();
  }
}